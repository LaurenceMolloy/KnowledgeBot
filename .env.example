ENV_LOADED = 1 # marker for environment having been loaded

###### SLACK Environment Settings (our #KNOWLEDGE source)
# NOTE: KnowledgeBot must be a member of the Slack channels identified below

# WHEN using local dev - you must set SLACK_TOKEN below. When containerised, use a Docker Secrets file (secrets/SLACK_TOKEN).
# Where run in a container, and secrets/SLACK_TOKEN conflicts with value set here, secrets/SLACK_TOKEN takes precedence.
SLACK_TOKEN = "REPLACE_WITH_YOUR_SLACK_BOT_TOKEN"


SLACK_KNOWLEDGE_CHANNELS = "EXAMPLE_1,EXAMPLE_2" # channels that include exportable #KNOWLEDGE (a comma-separated string)
SLACK_CHANNEL_TYPES = "public_channel"           # channel types include: public_channel, private_channel, im, mpim
SLACK_EDIT_CHANNEL = "EXAMPLE_3"                 # #EDIT messages channel, pointing at messages containing #KNOWLEDGE for re-processing
SLACK_BOT_EMOJI = "mortar_board"                 # emoji used to mark #KNOWLEDGE and #EDIT messages processed by the bot


###### LLM Environment Settings (for enriching #KNOWLEDGE with tags and a brief summary)
# NOTE: currently, only local Ollama servers have been tested - testing of remote servers is still a TODO
ENABLE_LLM = 'false'
LLM_SERVER = 'localhost'
LLM_PORT = 443
LLM_PROVIDER = "ollama"                 # supported values: ('ollama', 'null'). null => skip LLM enhancement
LLM_MODEL = "mistral:7b-instruct-q4_0"  # must be an available model on the ollama server


# VECTOR DB CONFIGURATION
# 1. tokenisation configuration
# 2. embeddings configuration
# 3. vector store configuration
VECTOR_DB_PROVIDER = "weaviate"
VECTOR_DB_SERVER = "localhost"
VECTOR_DB_PORT = 8080
VECTOR_DB_FOLDER = "./data/vectordb"
# TEXT PROCESSING CONFIGURATION
VECTOR_DB_CHUNK_LENGTH = 100
VECTOR_DB_CHUNK_OVERLAP = 20
VECTOR_DB_TOKEN_EMBEDDING = None


###### General Environment Settings
EXPORT_FOLDER = "./data"    # destination for extracted and annotated #KNOWLEDGE
STATE_FILE = "./state.json" # for persisting the last run time between each #KNOWLEDGE extraction run
                            # (for efficiency, KnowledgeBot only processes NEW Slack messages since last run)